#include <search/number_of_closed_islands.cpp>

TEST(统计封闭岛屿的数目, closedIsland) {
  Solution solution;
  // 示例 1：
  // 输入：grid =
  // [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]
  // 输出：2
  // 解释：
  // 灰色区域的岛屿是封闭岛屿，因为这座岛屿完全被水域包围（即被 1 区域包围）。
  // 示例 2：
  // 输入：grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]
  // 输出：1
  vector<vector<int>> grid = {{1, 1, 1, 1, 1, 1, 1, 0},
                              {1, 0, 0, 0, 0, 1, 1, 0},
                              {1, 0, 1, 0, 1, 1, 1, 0},
                              {1, 0, 0, 0, 0, 1, 0, 1},
                              {1, 1, 1, 1, 1, 1, 1, 0}};
  EXPECT_EQ(solution.closedIsland(grid), 2);

  // 示例 3：
  // 输入：grid = [[1,1,1,1,1,1,1],
  //              [1,0,0,0,0,0,1],
  //              [1,0,1,1,1,0,1],
  //              [1,0,1,0,1,0,1],
  //              [1,0,1,1,1,0,1],
  //              [1,0,0,0,0,0,1],
  //              [1,1,1,1,1,1,1]]
  // 输出：2
  grid = {{1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 1}, {1, 0, 1, 1, 1, 0, 1},
          {1, 0, 1, 0, 1, 0, 1}, {1, 0, 1, 1, 1, 0, 1}, {1, 0, 0, 0, 0, 0, 1},
          {1, 1, 1, 1, 1, 1, 1}};
  EXPECT_EQ(solution.closedIsland(grid), 2);
}
